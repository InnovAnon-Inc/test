name: Kernel CI

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

  push:
    branches: [ "kernel" ]
  pull_request:
    branches: [ "kernel" ]

env:
  tag: 6.3 # 5.4

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: install build deps
      uses: awalsh128/cache-apt-pkgs-action@latest
      with:
        packages: >
          fakeroot build-essential xz-utils
          libssl-dev bc flex libelf-dev bison rsync
        version: 1.0

    - name: checkout Linux kernel
      uses: actions/checkout@v3
      with:
        # https://git.kernel.org/pub/scm/linux/kernel
        repository: torvalds/linux
        #ref: v5.4
        ref: v${{ env.tag }}
        path: linux/src
        fetch-depth: 1
        #submodules: true

    - name: clean kernel source
      working-directory: linux/src
      run: make mrproper

    - name: configure kernel
      working-directory: linux/src
      run: make INSTALL_PATH=${{ github.workspace }}/linux/bin defconfig

    - name: build kernel
      working-directory: linux/src
      run: make INSTALL_PATH=${{ github.workspace }}/linux/bin vmlinux

    - name: build modules
      working-directory: linux/src
      run: make INSTALL_PATH=${{ github.workspace }}/linux/bin modules

    #- name: setup for building external modules
    #  working-directory: linux/src
    #  run: make INSTALL_PATH=${{ github.workspace }}/linux/lib modules_prepare

    - name: setup for building external modules
      working-directory: linux/src
      run: make INSTALL_MOD_PATH=${{ github.workspace }}/linux/bin modules_install

    - name: install sanitized kernel headers
      working-directory: linux/src
      run: make INSTALL_HDR_PATH=${{ github.workspace }}/linux/bin headers_install

    - name: create installation package
      working-directory: ${{ github.workspace }}/linux
      run: tar acpf ../linux-${{ env.tag }}.tar.xz -C ${{ github.workspace }}/linux .

    #- name: sign installation package
    #  working-directory: ${{ github.workspace }}
    #  run: gpg --yes --detach-sig linux-${{ env.tag }}.tar.xz

    - name: Bump version and push tag
      uses: mathieudutour/github-tag-action@v6.1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        custom_tag: v${{ env.tag }}

    - name: Release
      uses: softprops/action-gh-release@v1
      #if: startsWith(github.ref, 'refs/tags/')
      #working-directory: ${{ github.workspace }}
      with:
        #body:
        #body_path:
        tag_name: ${{ env.tag }}
        fail_on_unmatched_files: true
        #target_commitish: cmake
        #generate_release_notes: true
        files: |
          linux-${{ env.tag }}.tar.xz

